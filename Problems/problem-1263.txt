
Read problems statements in Mandarin chinese, Russian and Vietnamese as well.
A food fair is being organised in Chef's town. NN booths were set up in a straight line and numbered 11 through NN. For each ii (1≤i≤N1≤i≤N), the probability with which the food served at booth ii will cause food poisoning at the beginning of the day is PiPi.
Over the course of the day, the Chef observes that certain booths might decide to offer less unhealthy food based on feedback from customers. You should process QQ queries of the following two types:

0LR0LR — Compute the probability that eating at each booth between booths LL and RR (inclusive) does not cause food poisoning.
1LRT1LRT — Each booth between booths LL and RR (inclusive) starts offering food that is TT times more likely to cause food poisoning.

Input

The first line of the input contains two space-separated integers NN and QQ.
The second line contains NN space-separated decimal numbers P1,P2,P3,…,PNP1,P2,P3,…,PN.
Each of the following QQ lines describes one query in the format 0LR0LR or 1LRT1LRT. Here, LL and RR are integers and TT is a decimal number.

Output
For each query of type 00, print a single line containing one real number — the probability of not getting food poisoning. Your answer will be considered correct if its absolute error doesn't exceed 10−610−6.
Constraints

1≤N,Q≤1051≤N,Q≤105
0≤Pi≤0.90≤Pi≤0.9 for each valid ii
1≤L≤R≤N1≤L≤R≤N
0≤T<10≤T<1
all decimals on the input will be given with at most 6 fractional digits

Subtasks
Subtask 1 (15 points): 1≤N,Q≤2,0001≤N,Q≤2,000
Subtask 2 (85 points): original constraints
Example Input

4 7
0.1 0.25 0.85 0.43
0 1 3
1 2 4 0.73
1 1 3 0.00255
1 3 4 0.01258
0 1 4
0 2 3
0 3 3

Example Output

0.10125000
0.99531391
0.99951473
0.99998009

Explanation
The answer to the first query is (1−0.1)⋅(1−0.25)⋅(1−0.85)=0.10125(1−0.1)⋅(1−0.25)⋅(1−0.85)=0.10125.
After the second query, the probabilities of getting food poisoning at each booth become [0.1,0.1825,0.6205,0.3139][0.1,0.1825,0.6205,0.3139].

Author:
7★bciobanu
Editorial:
https://discuss.codechef.com/problems/CHEFAT
Tags:

               
                 Lazy Propagation, Probability, Taylor Series
                 
                     
                     Advanced Data Structures, Advanced Tree Structures, Segment Trees, Mathematics, Series
                 
               
             
             

                        Difficulty Rating:
                    

2602
Date Added:
27-12-2017
Time Limit:
2 secs
Source Limit:
50000 Bytes
Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
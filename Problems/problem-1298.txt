
Read problem statements in Russian
In a game, you can choose when to enter and exit, but you can only do this exactly once. Choosing to enter and exit the game at time ll and rr respectively will cost you k⋅(r−l)k⋅(r−l) coins.
The game has nn items. Item ii is valued at vivi coins. You can only collect item vivi if you are in the game during the whole time period of [xi,yi][xi,yi]; that is, l≤xi≤yi≤rl≤xi≤yi≤r. Your profit after the game is the total value of the items collected minus the cost of entering and exiting the game.
You want to enter and exit the game so that your profit is maximized. Find that maximized profit.
Input:

The first line contains two integers, nn and kk.
Then, nn lines follow. The ii-th line of these contains three integers, xi,yi,vixi,yi,vi.

Output:
Print a single line containing the maximized profit.
Constraints

1≤n≤1051≤n≤105
1≤vi,k≤1091≤vi,k≤109
−109≤xi,yi≤109−109≤xi,yi≤109
xi≤yixi≤yi

Subtasks:
Subtask #1 (15 points): n≤20n≤20
Subtask #2 (25 points): n≤1000n≤1000
Subtask #3 (60 points): original constraints

                        Sample Input 1
                        

3 2
    1 3 3
    1 2 5
    4 7 1

                        Sample Output 1
                        

4
Explanation
It is optimal to enter at time 11 and exit at time 33 to get item number 11 and 22.

Author:
nhdtxdy
Editorial:
https://discuss.codechef.com/problems/GAMEPROF
Tags:

               
                 Lazy Propagation, Coordinate Compression
                 
                     
                     Advanced Data Structures, Advanced Tree Structures, Segment Trees, Advanced Algorithms, Pre processing
                 
               
             
             

                        Difficulty Rating:
                    

2747
Date Added:
2-01-2021
Time Limit:
1 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
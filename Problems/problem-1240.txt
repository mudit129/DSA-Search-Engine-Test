
Given an array aa of nn integers. You need to swap adjacent numbers exactly kk times. The goal is to minimise the number of inversions after exactly kk swaps.
An inversion is a pair (i,j)(i,j) such that i<ji<j and ai>ajai>aj
Input

The first line contains an integer TT indicating the number of test cases. For each test case, there are two lines in total. 
The first line contains two space separated integers - nn and kk.
The second line contains nn space separated integers, the ithith of which is aiai.

Output
Output TT lines in total. Each line should start with "Case #: " and followed by the minimum inversions after swaps. Here "#" is the number of the test case starting from 11.
Constraints

1≤T≤101≤T≤10
2≤n≤1000002≤n≤100000
0≤k≤10000000≤k≤1000000
1≤ai≤n1≤ai≤n

Example Input
3
3 3
3 2 1
3 1
1 2 3
3 2
1 2 3

Example Output:
Case 1: 0
Case 2: 1
Case 3: 0

Explanation
Test Case 1: (32)1(32)1 --> 231231 --> 2(31)2(31) --> 213213 --> (21)3(21)3 --> 123123
Test Case 2: (12)3(12)3 --> 213213.

Author:
admin
Editorial:
https://discuss.codechef.com/problems/ACM14KP2
Tags:

               
                 acmkgp14, admin, easy-medium, fenwick-tree, segment-tree, sorting
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
18-09-2014
Time Limit:
2 secs
Source Limit:
50000 Bytes
Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3

Submit
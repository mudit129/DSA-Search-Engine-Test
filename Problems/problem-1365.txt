
Phineas and Ferb have made the treehouse. They have now decided to spend time with Perry who is spending his off day (remember, Chef is dealing with Dr. Doofenshmirtz today). They have taught Perry about the binary number system. Now, to check whether Perry has understood properly, Phineas will ask some queries which Perry needs to answer correctly.
The tree contains NN nodes and every node ii (1≤i≤N)(1≤i≤N) has a value AiAi associated with it. All the edges are bidirectional. The tree is rooted at node 11. Phineas will ask QQ queries in total. Each query can be of 2 types:

11 uu vv xx - For every node rr on the simple path between nodes uu and vv, apply bitwise OR operation on the associated value with the value xx, i.e., replace ArAr by Ar∨xAr∨x, where ∨∨ denotes the bitwise OR operation.
22 kk yy - Calculate the maximum value of Ar⊕yAr⊕y over all nodes rr in the subtree of node kk, where ⊕⊕ denotes the bitwise XOR operation. The associated values of all the nodes will remain unchanged after this operation.

Help Perry answer the queries. Afterall, Perry is just a platypus. He doesn't do much.
Input

The first line contains a single integer TT denoting the number of testcases.
The first line of each test case contains 22 space separated integers NN and QQ.
The next line contains NN space separated integers denoting AiAi.
The next N−1N−1 lines contain two space separated integers aa and bb, each denoting a bidirectional edge between the nodes aa and bb in the tree.
The next QQ lines describe each query in the format given above.

Output
For each query of type 22, print the maximum possible XOR value in a new line.
Constraints

1≤T≤1031≤T≤103
1≤N≤3×1041≤N≤3×104
1≤Q≤5×1051≤Q≤5×105
1≤a,b,u,v,k≤N1≤a,b,u,v,k≤N
0≤Ai,x,y<2170≤Ai,x,y<217
Sum of NN and QQ over all test cases for a particular test file does not exceed 3×1043×104 and 5×1055×105 respectively.

Sample Input
1
4 3
1 2 2 3
1 2
2 3
1 4
2 1 7
1 1 3 4
2 1 7

Sample Output
6
4

Explanation
The sample tree can be represented as follows:

For the first query, the nodes in the subtree of node 11 are nodes 11, 22, 33 and 44. Consider the bitwise XOR values with the corresponding node values.

7⊕1=67⊕1=6
7⊕2=57⊕2=5
7⊕2=57⊕2=5
7⊕3=47⊕3=4 

The maximum of these values is 66. Therefore, the answer to this query is 66.
After the update operation, the tree looks like the following representation:

For the last query, the bitwise XOR values are:

7⊕5=27⊕5=2
7⊕6=17⊕6=1
7⊕6=17⊕6=1
7⊕3=47⊕3=4 

The maximum of these values is 44. Therefore, the answer to this query is 44.

Author:
6★sarthakmanna
Editorial:
https://discuss.codechef.com/problems/CLBIT
Tags:

               
                 Trees, Tries with XOR, Disjoint Set Union, Segment Trees, DFS, Implementation
                 
                     
                     Data Structures, Graphs, Advanced Data Structures, Tries, Advanced Tree Structures, Algorithms, Graph Algos, Traversals
                 
               
             
             

                        Difficulty Rating:
                    

3222
Date Added:
25-06-2020
Time Limit:
5 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
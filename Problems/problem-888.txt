
A lot of guests have suddenly shown up at your house and you only have xx litres of cold water (at yy°) at the moment. Due to fear of Covid, each guest brings their own bottle, each of which already has MiMi litres of water at CiCi°. Each of these bottles has infinite capacity.
If you add cool water to the ithith bottle, the temperature changes according to the formula Tfinal=(Mi∗Ci+K∗y)(Mi+K)Tfinal=(Mi∗Ci+K∗y)(Mi+K) where KK is the amount of cool water you added. 
You wish to maximise the number of containers that have a temperature ≤Q≤Q.
Note: It is guaranteed that Q>yQ>y.
Input:

The first line contains TT, the number of test cases.
The first line of each test case contains four space separated integers - xx, yy, QQ and nn - the amount of cold water you have, the temperature of the 'cold water', the target temperature and the number of bottles.
The next nn lines of each test case contain two space separated integers - MiMi and CiCi - the amount of water and its temperature, in the ithith bottle.

Output:
Print the maximum number of bottles whose temperature can be ≤Q≤Q.
Constraints

1≤T≤201≤T≤20
0≤y,Ci,Q≤1000≤y,Ci,Q≤100
0≤x,Mi≤10000≤x,Mi≤1000
1≤n≤10001≤n≤1000

Sample Input:
1
500 1 15 5
50 50
500 30
80 20
100 10
30 15

Sample Output:
4


Author:
3★kabirkanha
Editorial:
https://discuss.codechef.com/problems/COLDPANI
Tags:

               
                 greedy, kabirkanha, snuc2020, sorting
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
26-10-2020
Time Limit:
2 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit

Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef is very popular, so his friends visit him often. Chef's friend Pesic decided to come visit him in Chefland during one of Pesic's famous world tours, but he got lost along the way and ended up in Queryland. Queryland has a weird structure: it has NN cities (numbered 11 through NN) and N−1N−1 bidirectional roads connecting them in such a way that it is possible to reach any city in Queryland from any other city.
Pesic visited all cities in Queryland and assigned values to them according to his experiences. Let's denote the initial value of city ii by AiAi. Now that Pesic has seen all cities, he wants to play in Queryland for a bit longer. He has QQ queries of two types:

1 X Y: Consider the shortest path between cities XX and YY. Let's denote the length (number of cities, including the endpoints) of this path by LL. Check whether the values of cities on this path (including the endpoints) form a permutation of the integers 11 through LL.
2 X Z: Change the value of city XX to ZZ.

You are a big fan of Pesic, so he lets you process these queries for him.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and QQ.
The second line contains NN space-separated integers A1,A2,…,ANA1,A2,…,AN.
Each of the next N−1N−1 lines contains two space-separated integers uu and vv denoting that cities uu and vv are connected by a road.
The following QQ lines describe queries.
Each of these lines starts with an integer tt denoting the type of the current query: t=1t=1 for a query of the first type or t=2t=2 for a query of the second type.
If t=1t=1, it is followed by a space and two space-separated integers XX and YY describing a query of the first type.
Otherwise, it is followed by a space and two space-separated integers XX and ZZ describing a query of the second type.

Output
For each query of the first type, print a single line containing the string "Yes" if the values on the given path are a correct permutation or "No" if they are not.
Constraints

1≤T≤101≤T≤10
1≤N,Q≤250,0001≤N,Q≤250,000
1≤u,v≤N1≤u,v≤N
1≤X,Y,Z≤N1≤X,Y,Z≤N
1≤Ai≤N1≤Ai≤N for each valid ii
the sum of NN over all test cases does not exceed 500,000500,000
the sum of QQ over all test cases does not exceed 500,000500,000

Subtasks
Subtask #1 (10 points): N,Q≤1,000N,Q≤1,000
Subtask #2 (40 points): v=u+1v=u+1 for each road
Subtask #3 (50 points): original constraints
Example Input
1
10 5
1 2 3 4 5 6 7 8 9 10
1 2
1 3
2 4
2 5
3 9
4 10
5 6
5 7
5 8
1 4 3
1 10 3
2 10 5
1 10 3
1 5 3

Example Output
Yes
No
Yes
No

Explanation

Query 1: The values of cities on the path between cities 44 and 33 are 44, 22, 11 and 33, so they form a permutation of 1,2,3,41,2,3,4.
Query 2: The values of cities on the path between cities 1010 and 33 are 1010, 44, 22, 11 and 33, so they do not form a permutation of 1,2,3,4,51,2,3,4,5.
Query 3: The value of city 1010 changes from 1010 to 55.
Query 4: The values of cities on the path between cities 1010 and 33 are now 55, 44, 22, 11 and 33, which is a permutation of 1,2,3,4,51,2,3,4,5.
Query 5: The values of cities on the path between cities 55 and 33 are 55, 22, 11 and 33, which is not a permutation of 1,2,3,41,2,3,4.


Author:
thesitzr
Tags:

               
                 Trees, Lazy Propagation, Randomized Algorithms, HLD, Lowest Common Ancestor, DFS Order, Prefix Sum
                 
                     
                     Data Structures, Graphs, Advanced Data Structures, Advanced Tree Structures, Segment Trees, Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals, DFS, Simple Algos
                 
               
             
             

                        Difficulty Rating:
                    

2756
Date Added:
24-06-2019
Time Limit:
4 secs
Source Limit:
50000 Bytes
Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit

According to the new tax scheme, a new tax called the binary string tax was introduced! JJ has a binary string SS of length NN. According to the tax scheme, for every occurrence of 0101 in SS, a tax of XX rupees will be charged, while for every occurrence of 1010 in SS, a tax of YY rupees will be charged.
For example, if X=5X=5, Y=7Y=7 and S=11010S=11010, then SS has 11 occurrence of 0101 and 22 occurrences of 1010, so the tax charged =5⋅1+7⋅2=19=5⋅1+7⋅2=19 
JJ can rearrange the string SS in any way he wants. He wants to minimize the amount of tax he has to pay. Can you help him do so?
Input Format

The first line contains a single integer TT - the number of test cases. Then the test cases follow.
The first line of each test case contains three integers NN, XX and YY - the length of the binary string SS, the tax charged on an occurrence of 0101 and the tax charged on an occurrence of 1010.
The second line of each test case contains a binary string SS of length NN containing 00s and 11s only.

Output Format
For each test case, output the minimum amount of tax that JJ has to pay.
Constraints

1≤T≤1001≤T≤100
2≤N≤10002≤N≤1000
1≤X,Y≤1001≤X,Y≤100
                        Sample Input 1
                        

2
4 7 3
1101
5 3 4
00000

                        Sample Output 1
                        

3
0
Explanation
Test Case 1: JJ can rearrange SS to 11101110 for which the tax charged will be 33 which is the minimum value of tax.
Test Case 2: The tax charged for the string S=00000S=00000 is 00 which can not be reduced further.

Author:
6★jeevanjyot
Editorial:
https://discuss.codechef.com/problems/BSCOST
Tags:

               
                 jeevanjyot, math, simple, start32, strings
                 
               
             
             

                        Difficulty Rating:
                    

1069
Date Added:
24-03-2022
Time Limit:
0.5 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit

There is a bit-string S of length N (0- indexed) which can contain only 0s and 1s. Initially, all the bits are 0. Now you have to perform two types of operations:
1) Flip all the bits between s[x] and s[y] (both inclusive). This is represented by the command "0 x y" 
2) Answer how many bits between s[x] and s[y] (both inclusive) are 1. This is represented by the command "1 x y".
Input
The first line of the input contains two integer N and Q  denoting the length of the string and the number of queries to be executed respectively. 
Each of the next Q lines are either of the form "0 x y" or "1 x y" as mentioned above. 
Output
Output single line for each of the queries of the form "1 x y" containing the required answer for the corresponding query.
Constraints

1 ≤ N,Q ≤ 100000
0 ≤ x,y ≤ N-1

 
Example
Input:
4 7
1 0 3
0 1 2
1 0 1
1 0 0
0 0 3
1 0 3 
1 3 3

Output:
0
1
0
2
1

 

Author:
2★hsagarthegr8
Editorial:
https://discuss.codechef.com/problems/BITMASK5
Tags:

               
                 hsagarthegr8, medium, segment-tree
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
28-04-2017
Time Limit:
0.015 secs
Source Limit:
50000 Bytes
Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
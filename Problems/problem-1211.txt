
Read problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.
If I keep moving, they won't know |
I'll morph to someone else |
What they throw at me's too slow |
I'll morph to someone else |
I'm just a ghost |
I'll morph to someone else |
Defense mechanism mode!
You are given two integer sequences A1,A2,…,ANA1,A2,…,AN and B1,B2,…,BNB1,B2,…,BN and an integer KK. You may perform the following operation at most 3⋅N3⋅N times:

Select a contiguous subsequence of AA with length KK. Let's denote this subsequence by AL,AL+1,…,AL+K−1AL,AL+1,…,AL+K−1.
Create an integer sequence S1,S2,…,SKS1,S2,…,SK which is isomorphic to the selected subsequence ― for each pair of integers ii and jj (1≤i,j≤K1≤i,j≤K), Si=SjSi=Sj must hold if AL−1+i=AL−1+jAL−1+i=AL−1+j and Si≠SjSi≠Sj must hold if AL−1+i≠AL−1+jAL−1+i≠AL−1+j. In addition, 1≤Si≤1,0001≤Si≤1,000 must hold for each valid ii.
For each valid ii, replace AL−1+iAL−1+i by SiSi.

Is it possible to change the sequence AA to BB? If it is possible, find a sequence of operations which morphs AA to BB.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and KK.
The second line contains NN space-separated integers A1,A2,…,ANA1,A2,…,AN.
The third line contains NN space-separated integers B1,B2,…,BNB1,B2,…,BN.

Output
For each test case:

If it is impossible to morph AA to BB using no more than 3⋅N3⋅N operations, print a single line containing the string "NO" (without quotes).
Otherwise, start by printing a line containing the string "YES" (without quotes).
Then, print a line containing a single integer PP (0≤P≤3⋅N0≤P≤3⋅N) ― the number of operations you want to perform.
Finally, print PP lines. Each of these lines should contain K+1K+1 space-separated integers L,S1,S2,…,SKL,S1,S2,…,SK describing an operation (1≤L≤N−K+11≤L≤N−K+1; 1≤Si≤1,0001≤Si≤1,000 for each valid ii).

If there are multiple solutions, you may find any one of them.
Constraints

1≤T≤1001≤T≤100
1≤K≤N≤1001≤K≤N≤100
1≤Ai,Bi≤1,0001≤Ai,Bi≤1,000 for each valid ii

Example Input
4
4 3
1 2 3 4
4 3 2 1
7 5
2 1 2 1 1 3 2
5 4 1 5 4 3 9 
6 4 
1 1 5 4 3 6
5 3 4 5 1 1
3 1
1 1 1
9 10 21

Example Output
YES
2
1 4 3 2
2 3 2 1
NO
YES
3
2 3 4 1 6
1 5 3 4 5
3 4 5 1 1
YES
3
1 9
2 10
3 21

Explanation
Example case 1: The state of the sequence after each operation is [1,2,3,4]→[4,3,2,4]→[4,3,2,1][1,2,3,4]→[4,3,2,4]→[4,3,2,1].
Example case 3: The state of the sequence after each operation is [1,1,5,4,3,6]→[1,3,4,1,6,6]→[5,3,4,5,6,6]→[5,3,4,5,1,1][1,1,5,4,3,6]→[1,3,4,1,6,6]→[5,3,4,5,6,6]→[5,3,4,5,1,1].
See the following animation for more clarity:


Author:
6★sjshohag
Editorial:
https://discuss.codechef.com/problems/MORPH21
Tags:

               
                 Hashmaps, ad-hoc
                 
                     
                     Data Structures, Algorithms, Constructive
                 
               
             
             

                        Difficulty Rating:
                    

3225
Date Added:
5-10-2020
Time Limit:
1 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
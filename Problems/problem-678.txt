
You are given a graph with NN vertices (numbered 11 to NN) and MM bidirectional edges, which doesn't contain multiple edges or self-loops — that is, the given graph is a simple undirected graph.
For each pair of vertices a,ba,b such that 1≤a,b≤N1≤a,b≤N, it is possible to add a new edge between vertices aa and bb to the graph, with a cost of (a−b)2(a−b)2.
Find the minimum cost of adding edges so that vertex NN is reachable from vertex 11.
Input Format

The first line of input contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains 22 space-separated integers, NN and MM.
The ithith of the next MM lines contains 22 space-separated integers uiui and vivi, denoting a bidirectional edge between vertex uiui and vertex vivi in the graph.

Output Format
For each test case, output the answer in a single line.
Constraints

1≤T≤10001≤T≤1000
2≤N≤2⋅1052≤N≤2⋅105
0≤M≤2⋅1050≤M≤2⋅105
1≤ui,vi≤N1≤ui,vi≤N
The graph doesn't contain self-loops or multiple edges
Sum of NN over all testcases is no more than 2⋅1052⋅105.
Sum of MM over all testcases is no more than 2⋅1052⋅105.
                        Sample Input 1
                        

3
2 0
5 4
3 2
1 4
5 3
4 2
6 3
1 2
3 2
1 3

                        Sample Output 1
                        

1
0
3
Explanation
Test Case 11: Add an edge between vertices 11 and 22, with cost (1−2)2=1(1−2)2=1.
Test Case 22: Vertices 11 and 55 are already connected, so no edges need to be added.

Author:
4★vishesh_s
Editorial:
https://discuss.codechef.com/problems/TRAVELLING
Tags:

               
                 easy, graphs, shortest-path, start28, vishesh_s
                 
               
             
             

                        Difficulty Rating:
                    

2108
Date Added:
25-02-2022
Time Limit:
1 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
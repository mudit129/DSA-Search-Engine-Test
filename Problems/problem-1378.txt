
Well, before Chef could counter attack, Dr Doof showed his innocent face which moved Chef. Moreover, on hearing his complete story, Chef took pity on him and decided to befriend him. He even decided to play a game with him. The game goes as follows:
Chef gives Dr Doof a string SS of length NN consisting only of lowercase Latin letters and asks him to study the string carefully.
A substring of a string is a contiguous subsequence of that string. We denote the substring of string SS starting from the lthlth character and ending with the rthrth character as S[l,r]S[l,r]. So, strings chef and odech are substrings of string codechef, but string codee is not. 
Chef defines a substring to be unique if it occurs in the whole string SS exactly once.
After Dr Doof studies the string, Chef asks him QQ queries of the form - LL RR KK.
For each query, you have to find the lexicographically smallest unique substring of length atleast KK in [L,R][L,R], or say that there is no unique substring in this range. Formally, the answer to each query is two integers ll and rr such that:

L≤l≤r≤RL≤l≤r≤R
r−l+1≥Kr−l+1≥K
S[l,r]S[l,r] is the lexicographically smallest unique substring satisfying conditions 11 and 22.

String pp is lexicographically smaller than string qq, if pp is a prefix of qq not equal to qq or there exists an index ii, such that pipi < qiqi and for all j < i,pj = qjj < i,pj = qj. For example, abc is lexicographically smaller than abcd , abd is lexicographically smaller than abec.
This time, you have to help the poor Dr Doof answer the queries as he doesn't want to lose his new friend. If there is no unique substring S[l,r]S[l,r] satisfying the above conditions, print two space separated integers: −1−1 −1−1.
Input:

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer NN.
The second line contains a single string SS.
The third line contains a single integer QQ.
QQ lines follow. Each of these lines contains three space-separated integers LL RR KK describing a query.

Output:
For each query, print a single line containing two space separated integers ll and rr ― the answer to the query.
Constraints

1≤T≤1051≤T≤105
2≤N≤5×1052≤N≤5×105
1≤Q≤5×1051≤Q≤5×105
1≤L≤R≤N1≤L≤R≤N
1≤K≤R−L+11≤K≤R−L+1
The sum of NN over all test cases does not exceed 5×1055×105
The sum of QQ over all test cases does not exceed 5×1055×105

Sample Input:
1
5
abcab
4
1 3 2
2 5 3
3 4 1
4 5 1

Sample Output:
1 3
2 4
3 3
-1 -1

Explanation:
Query 11: The unique substrings in [1,3][1,3] are c, abc and bc. abc is the lexicographically smallest unique substring of length atleast 2.
Query 22: The unique substrings in [2,5][2,5] are bc, bca, bcab, c, ca and cab. bca is the lexicographically smallest unique substring of length atleast 3.
Query 33: The unique substrings in [3,4][3,4] are c and ca. c is the lexicographically smallest unique substring of length atleast 1.
Query 44: None of the substrings in [4,5][4,5] are unique.

Author:
5★aman_robotics
Editorial:
https://discuss.codechef.com/problems/CLUNQUE
Tags:

               
                 Suffix Arrays, Segment Trees, Fenwick Trees, Longest Common Prefix
                 
                     
                     Advanced Data Structures, Suffix Structures, Advanced Tree Structures, Algorithms, Dynamic Programming, DP on sequences
                 
               
             
             

                        Difficulty Rating:
                    

3082
Date Added:
10-07-2020
Time Limit:
2 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
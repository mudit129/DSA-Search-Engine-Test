
You have a grid with NN rows and MM columns in which KK cells are black and the rest are white.
Let (i,j)(i,j) represent the cell in the ii-th row from the top and the jj-th column from the left. 
If you are currently at cell (i,j)(i,j), you can:

move one cell down to (i+1,j)(i+1,j)
move one cell right to (i,j+1)(i,j+1)

The cost of a path is defined as the number of times you move between two cells that have different colours.
You are given QQ queries. In the ii-th query, you are initially at (1,1)(1,1) and want to reach (Xi,Yi)(Xi,Yi) with the minimum cost.
For each query, before you begin, you can perform the following operation any number of times (possibly zero):

Choose a column and flip the colour of all cells in this column (i.e. change the colour of all the black cells to white and the colour of all the white cells to black in this column)

For each query, what is the minimum cost of a path from (1,1)(1,1) to (Xi,Yi)(Xi,Yi) after performing this operation any number of times (possibly zero)?
Note: The operations applied in different queries are independent of each other.
Input Format

The first line of the input contains a single integer TT - the number of test cases. The description of TT test cases follows.
The first line of each test case contains three integers NN, MM, KK and QQ - the number of rows, the number of columns, the number of black cells and the number of queries respectively.
The following KK lines each contain two integers AiAi and BiBi - indicating that the ii-th black cell is at (Ai,Bi)(Ai,Bi).
The following QQ lines each contain two integers XiXi and YiYi - the destination cell of the ii-th query.

Output Format
For each test case, print a single line containing QQ space separated integers ― the answer for each of the QQ queries.
Constraints

1≤T≤1051≤T≤105
1≤N,M,K,Q≤3⋅1051≤N,M,K,Q≤3⋅105
1≤Ai,Xi≤N1≤Ai,Xi≤N
1≤Bi,Yi≤M1≤Bi,Yi≤M
(Ai,Bi)≠(Aj,Bj)(Ai,Bi)≠(Aj,Bj) , ∀i≠j∀i≠j
(Xi,Yi)≠(Xj,Yj)(Xi,Yi)≠(Xj,Yj) , ∀i≠j∀i≠j
the sum of NN over all test cases does not exceed 6⋅1056⋅105
the sum of MM over all test cases does not exceed 6⋅1056⋅105
the sum of KK over all test cases does not exceed 6⋅1056⋅105
the sum of QQ over all test cases does not exceed 6⋅1056⋅105
                        Sample Input 1
                        

5
1 1 1 1
1 1
1 1
3 1 2 2
1 1
3 1
2 1
3 1
3 4 3 3
1 2
2 1
1 4
1 4
3 4
2 1
4 3 5 2
2 1
2 2
2 3
3 2
4 2
4 1
4 2
6 3 5 2
2 1
3 2
3 3
5 2
5 3
3 3
6 3

                        Sample Output 1
                        

0 
1 2 
0 0 1 
2 1 
1 2 
Explanation
Test case 1:

Query 1: We are already at (1,1)(1,1), so the minimum cost is 00.

Test case 2: 

Initial Grid:

Query 1: The only sequence of possible moves is (1,1)−→−−−−−−−black to whitecost = 1(2,1)(1,1)→black to whitecost = 1(2,1). So the total cost is 11.
Query 2: The only sequence of possible moves is (1,1)−→−−−−−−−black to whitecost = 1(2,1)−→−−−−−−−white to blackcost = 1(3,1)(1,1)→black to whitecost = 1(2,1)→white to blackcost = 1(3,1). So the cost is 22.

It can be shown that no better answer is possible by performing any column flipping operations.
Test case 3:

Initial Grid:

Query 1: One optimal solution is to flip columns 22 and 44 to obtain the following grid.
Then you can perform the following moves for a cost of 00 -  (1,1)−→−−−−−−−white to whitecost = 0(1,2)−→−−−−−−−white to whitecost = 0(1,3)−→−−−−−−−white to whitecost = 0(1,4)(1,1)→white to whitecost = 0(1,2)→white to whitecost = 0(1,3)→white to whitecost = 0(1,4)

Query 2: One optimal solution is to flip columns 22.
Then you can perform the following moves for a cost of 00 - (1,1)−→−−−−−−−white to whitecost = 0(1,2)−→−−−−−−−white to whitecost = 0(1,3)−→−−−−−−−white to whitecost = 0(2,3)−→−−−−−−−white to whitecost = 0(2,4)−→−−−−−−−white to whitecost = 0(3,4)(1,1)→white to whitecost = 0(1,2)→white to whitecost = 0(1,3)→white to whitecost = 0(2,3)→white to whitecost = 0(2,4)→white to whitecost = 0(3,4)

Query 3: One optimal solution is to flip no columns and then perform the following moves for a cost of 11 - (1,1)−→−−−−−−−white to blackcost = 1(2,1)(1,1)→white to blackcost = 1(2,1) for a total cost of 11.

Test case 4: 

Initial Grid:

Query 1: One optimal solution is to flip no columns and then perform the following moves for a cost of 22 -  (1,1)−→−−−−−−−white to blackcost = 1(2,1)−→−−−−−−−black to whitecost = 1(3,1)−→−−−−−−−white to whitecost = 0(4,1)(1,1)→white to blackcost = 1(2,1)→black to whitecost = 1(3,1)→white to whitecost = 0(4,1)
Query 2: One optimal solution is to flip no columns and then perform the following moves for a cost of 11 -  (1,1)−→−−−−−−−white to blackcost = 1(2,1)−→−−−−−−black to blackcost = 0(2,2)−→−−−−−−black to blackcost = 0(3,2)−→−−−−−−black to blackcost = 0(4,2)(1,1)→white to blackcost = 1(2,1)→black to blackcost = 0(2,2)→black to blackcost = 0(3,2)→black to blackcost = 0(4,2)


Author:
6★explodingfrz
Editorial:
https://discuss.codechef.com/problems/AVOIDALT
Tags:

               
                 breadth-first-search, dynamic-programming, explodingfrz, greedy, medium, observation, shortest-path, sliding-window, start32
                 
               
             
             

                        Difficulty Rating:
                    

3145
Date Added:
27-03-2022
Time Limit:
3 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit
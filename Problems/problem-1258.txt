
Jonas is a very enthusiast history student. He lives in the state of Winden and is fascinated by its history.  One night he was roaming in the forests of Winden and accidentally he discovered the WidenWiden CavesCaves. Which indeed were a TimeTime Machine!Machine! He knew that historically Winden was a very poor state, but if he can go to the past and give the gold that he found in the caves to the people, then Winden can be a rich state in the present.
There were always NN houses in Winden right from its inception. Input the list of original wealth HiHi of these NN households, where HiHi represents the wealth of ithith house,  which is unchanged from the very beginning to this day. 
Now you need to process QQ queries of two types

 past W I  : In this query, Jonas goes to the past and gives WW wealth to the IthIth household. No need to print any output here.
 present L R   : In this query, Jonas calculates the total wealth of houses from index LL to RR (both inclusive). You need to print this value on a new line.

Input:

First line contains NN the number of houses.
Second line contain NN spaced integers, where HiHi represents the wealth of ithith family
Third line contains QQ the total number of queries
Then, QQ lines follow. Each of these lines contains one of the two queries mentioned above.

Output:
For each query of the second type, print a single line containing one integer ― the wealth which Jonas calculated.
Constraints

1≤N≤1061≤N≤106
0≤Hi≤1090≤Hi≤109
1≤Q≤1051≤Q≤105
1≤W≤1091≤W≤109
1≤I≤N1≤I≤N
1≤L≤R≤N1≤L≤R≤N

Sample Input:
5
2 5 8 7 1
4
past 5 2
present 1 3 
past 10 5
present 1 5

Sample Output:
20
38

EXPLANATION:
In first query he adds 55 wealth to 2nd2nd house, now 2nd2nd house total wealth becomes 5+5=10.5+5=10.
In second query he calculates wealth from house 11 to 33, which is 2+10+8=20.2+10+8=20.
In third query he adds 1010 wealth to 5th5th house, now 5th5th house total wealth becomes 1+10=11.1+10=11.
In last query he calculates wealth from house 11 to 55, which is 2+10+8+7+11=38.2+10+8+7+11=38.

Author:
5★utkd52
Editorial:
https://discuss.codechef.com/problems/CMX1P04
Tags:

               
                 comx2020, segment-tree, utkd52
                 
               
             
             

                        Difficulty Rating:
                    

N/A
Date Added:
22-08-2020
Time Limit:
1 secs
Source Limit:
50000 Bytes
Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM

Submit